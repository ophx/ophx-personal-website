<div class="fixed left-0 right-0 top-4 m-auto flex items-center justify-between rounded-lg shadow-lg bg-card-background/50 backdrop-blur-lg border border-border px-8 w-[1200px] py-2">
    <a href="/" class="flex items-center gap-2">
        <img src="https://cdn3.emoji.gg/emojis/9879_hackerman.gif" alt="logo" width="50" height="50" draggable="false" />
    </a>
    <div class="gap-8 flex items-center">
        <a href="/#skills" class="text-text-main duration-200 hover:opacity-65 font-medium">Skills</a>
        <div class="relative inline-block">
            <button id="dropdown" class="flex items-center gap-1 text-text-main duration-200 hover:opacity-65 font-medium">
                <span>Theme</span>
                <svg id="arrow" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="size-5 transition-transform duration-200 ease-in-out">
                    <path fill-rule="evenodd" d="M5.22 8.22a.75.75 0 0 1 1.06 0L10 11.94l3.72-3.72a.75.75 0 1 1 1.06 1.06l-4.25 4.25a.75.75 0 0 1-1.06 0L5.22 9.28a.75.75 0 0 1 0-1.06Z" clip-rule="evenodd" />
                </svg>
            </button>
            <div id="dropdown-content" class="absolute z-1 opacity-0 -translate-y-2 pointer-events-none transition-all duration-200 ease-out bg-card-background/50 backdrop-blur-lg px-4 py-2 rounded-lg shadow-lg border border-border mt-2 w-44">
                <button id="dark" class="text-text-main duration-200 hover:opacity-65 font-medium cursor-pointer">Dark (Default)</button>
                <button id="light" class="text-text-main duration-200 hover:opacity-65 font-medium cursor-pointer">Light</button>
            </div>
        </div>
    </div>
</div>

<script is:inline>
    const dropdownBtn = document.getElementById("dropdown");
    const dropdownContent = document.getElementById("dropdown-content");
    const arrow = document.getElementById("arrow");

    const updateIcon = () => {
        const isOpen = dropdownContent.classList.contains("opacity-100");

        arrow.classList.toggle("rotate-180", isOpen);
    };
    updateIcon();

    dropdownBtn.addEventListener("click", () => {
        const isVisible = dropdownContent.classList.contains("opacity-100");

        dropdownContent.classList.toggle("opacity-0", isVisible);
        dropdownContent.classList.toggle("opacity-100", !isVisible);
        dropdownContent.classList.toggle("-translate-y-2", isVisible);
        dropdownContent.classList.toggle("translate-y-0", !isVisible);
        dropdownContent.classList.toggle("pointer-events-none", isVisible);
        dropdownContent.classList.toggle("pointer-events-auto", !isVisible);

        updateIcon();
    });

    const themeButtons = {
        dark: document.getElementById("dark"),
        light: document.getElementById("light"),
    };

    const setTheme = (theme) => {
        document.body.classList.remove("dark", "light");
        document.body.classList.add(theme);
    };

    themeButtons.dark.addEventListener("click", () => setTheme("dark"));
    themeButtons.light.addEventListener("click", () => setTheme("light"));
</script>